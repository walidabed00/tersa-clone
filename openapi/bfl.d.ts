/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/get_result": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Result
         * @description An endpoint for getting generation task result.
         */
        get: operations["get_result_v1_get_result_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.1": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX 1.1 [pro].
         * @description Submits an image generation task with FLUX 1.1 [pro].
         */
        post: operations["flux_pro_1_1_v1_flux_pro_1_1_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 [pro].
         * @description Submits an image generation task with the FLUX.1 [pro].
         */
        post: operations["flux_pro_v1_flux_pro_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-dev": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 [dev].
         * @description Submits an image generation task with FLUX.1 [dev].
         */
        post: operations["flux_dev_v1_flux_dev_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.1-ultra": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX 1.1 [pro] with ultra mode and optional raw mode.
         * @description Submits an image generation task with FLUX 1.1 [pro] with ultra mode and optional raw mode.
         */
        post: operations["generate_bigblue_v1_flux_pro_1_1_ultra_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-fill": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 Fill [pro] using an input image and mask.
         * @description Submits an image generation task with the FLUX.1 Fill [pro] model using an input image and mask. Mask can be applied to alpha channel or submitted as a separate image.
         */
        post: operations["fill_v1_flux_pro_1_0_fill_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-expand": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Expand an image by adding pixels on any side.
         * @description Submits an image expansion task that adds the specified number of pixels to any combination of sides (top, bottom, left, right) while maintaining context.
         */
        post: operations["expand_v1_flux_pro_1_0_expand_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-canny": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 Canny [pro] using a control image.
         * @description Submits an image generation task with FLUX.1 Canny [pro].
         */
        post: operations["pro_canny_v1_flux_pro_1_0_canny_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-depth": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 Depth [pro] using a control image.
         * @description Submits an image generation task with FLUX.1 Depth [pro].
         */
        post: operations["pro_depth_v1_flux_pro_1_0_depth_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/finetune_details": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Finetune Details
         * @description Get details about the training parameters and other metadata connected to a specific finetune_id that was created by the user.
         */
        get: operations["finetune_details_v1_finetune_details_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/finetune": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Finetune */
        post: operations["finetune_v1_finetune_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-finetuned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 [pro] finetune
         * @description Submits an image generation task with FLUX.1 [pro] using a finetune.
         */
        post: operations["flux_pro_finetuned_v1_flux_pro_finetuned_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-depth-finetuned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 Depth [pro] finetune using a control image.
         * @description Submits an image generation task with FLUX.1 Depth [pro] finetune.
         */
        post: operations["flux_pro_1_0_depth_finetuned_v1_flux_pro_1_0_depth_finetuned_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-canny-finetuned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 Canny [pro] finetune using a control image.
         * @description Submits an image generation task with FLUX.1 Canny [pro] finetune.
         */
        post: operations["flux_pro_1_0_canny_finetuned_v1_flux_pro_1_0_canny_finetuned_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.0-fill-finetuned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX.1 Fill [pro] finetune using an input image and mask.
         * @description Submits an image generation task with the FLUX.1 Fill [pro] finetune model using an input image and mask. Mask can be applied to alpha channel or submitted as a separate image.
         */
        post: operations["flux_pro_1_0_fill_finetuned_v1_flux_pro_1_0_fill_finetuned_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/my_finetunes": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * My Finetunes
         * @description List all finetune_ids created by the user
         */
        get: operations["my_finetunes_v1_my_finetunes_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/delete_finetune": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Delete Finetune
         * @description Delete a finetune_id that was created by the user
         */
        post: operations["delete_finetune_v1_delete_finetune_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-pro-1.1-ultra-finetuned": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /**
         * Generate an image with FLUX 1.1 [pro] finetune with ultra mode.
         * @description Submits an image generation task with FLUX 1.1 [pro] finetune with ultra mode.
         */
        post: operations["generate_bigblue_finetuned_v1_flux_pro_1_1_ultra_finetuned_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-kontext-pro": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Edit or create an image with Flux Kontext Pro */
        post: operations["generate_flux_kontext_pro_v1_flux_kontext_pro_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/flux-kontext-max": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        /** Edit or create an image with Flux Kontext Max */
        post: operations["generate_flux_kontext_max_v1_flux_kontext_max_post"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** AsyncResponse */
        AsyncResponse: {
            /** Id */
            id: string;
            /** Polling Url */
            polling_url: string;
        };
        /** AsyncWebhookResponse */
        AsyncWebhookResponse: {
            /** Id */
            id: string;
            /** Status */
            status: string;
            /** Webhook Url */
            webhook_url: string;
        };
        /** CannyInputs */
        CannyInputs: {
            /**
             * Prompt
             * @description Text prompt for image generation
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Control Image
             * @description Base64 encoded image to use as control input if no preprocessed image is provided
             */
            control_image?: string | null;
            /**
             * Preprocessed Image
             * @description Optional pre-processed image that will bypass the control preprocessing step
             */
            preprocessed_image?: string | null;
            /**
             * Canny Low Threshold
             * @description Low threshold for Canny edge detection
             * @default 50
             */
            canny_low_threshold: number | null;
            /**
             * Canny High Threshold
             * @description High threshold for Canny edge detection
             * @default 200
             */
            canny_high_threshold: number | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt
             * @default false
             */
            prompt_upsampling: boolean | null;
            /**
             * Seed
             * @description Optional seed for reproducibility
             * @example 42
             */
            seed?: number | null;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             */
            steps: number | null;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 30
             */
            guidance: number | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** DeleteFinetuneInputs */
        DeleteFinetuneInputs: {
            /**
             * Finetune Id
             * @description ID of the fine-tuned model you want to delete.
             * @example my-finetune
             */
            finetune_id: string;
        };
        /** DeleteFinetuneResponse */
        DeleteFinetuneResponse: {
            /**
             * Status
             * @description Status of the deletion
             */
            status: string;
            /**
             * Message
             * @description Message about the deletion
             */
            message: string;
            /**
             * Deleted Finetune Id
             * @description ID of the deleted finetune
             */
            deleted_finetune_id: string;
            /**
             * Timestamp
             * @description Timestamp of the deletion
             */
            timestamp: string;
        };
        /** DepthInputs */
        DepthInputs: {
            /**
             * Prompt
             * @description Text prompt for image generation
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Control Image
             * @description Base64 encoded image to use as control input
             */
            control_image?: string | null;
            /**
             * Preprocessed Image
             * @description Optional pre-processed image that will bypass the control preprocessing step
             */
            preprocessed_image?: string | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt
             * @default false
             */
            prompt_upsampling: boolean | null;
            /**
             * Seed
             * @description Optional seed for reproducibility
             * @example 42
             */
            seed?: number | null;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             */
            steps: number | null;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 15
             */
            guidance: number | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FinetuneCannyInputs */
        FinetuneCannyInputs: {
            /**
             * Finetune Id
             * @description ID of the fine-tuned model you want to use.
             * @example my-finetune
             */
            finetune_id: string;
            /**
             * Finetune Strength
             * @description Strength of the fine-tuned model. 0.0 means no influence, 1.0 means full influence. Allowed values up to 2.0
             * @default 1.1
             */
            finetune_strength: number;
            /**
             * Prompt
             * @description Text prompt for image generation
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Canny Low Threshold
             * @description Low threshold for Canny edge detection
             * @default 50
             */
            canny_low_threshold: number | null;
            /**
             * Canny High Threshold
             * @description High threshold for Canny edge detection
             * @default 200
             */
            canny_high_threshold: number | null;
            /**
             * Control Image
             * @description Base64 encoded image to use as control input
             */
            control_image: string;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility
             * @example 42
             */
            seed?: number | null;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             */
            steps: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 30
             */
            guidance: number;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FinetuneDepthInputs */
        FinetuneDepthInputs: {
            /**
             * Finetune Id
             * @description ID of the fine-tuned model you want to use.
             * @example my-finetune
             */
            finetune_id: string;
            /**
             * Finetune Strength
             * @description Strength of the fine-tuned model. 0.0 means no influence, 1.0 means full influence. Allowed values up to 2.0
             * @default 1.1
             */
            finetune_strength: number;
            /**
             * Prompt
             * @description Text prompt for image generation
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Control Image
             * @description Base64 encoded image to use as control input
             */
            control_image: string;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility
             * @example 42
             */
            seed?: number | null;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             */
            steps: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 15
             */
            guidance: number;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FinetuneDetailResponse */
        FinetuneDetailResponse: {
            /**
             * Finetune Details
             * @description Details about the parameters used for finetuning
             */
            finetune_details: {
                [key: string]: unknown;
            };
        };
        /** FinetuneFluxProFillInputs */
        FinetuneFluxProFillInputs: {
            /**
             * Finetune Id
             * @description ID of the fine-tuned model you want to use.
             * @example my-finetune
             */
            finetune_id: string;
            /**
             * Finetune Strength
             * @description Strength of the fine-tuned model. 0.0 means no influence, 1.0 means full influence. Allowed values up to 2.0
             * @default 1.1
             */
            finetune_strength: number;
            /**
             * Image
             * @description A Base64-encoded string representing the image you wish to modify. Can contain alpha mask if desired.
             */
            image: string;
            /**
             * Mask
             * @description A Base64-encoded string representing a mask for the areas you want to modify in the image. The mask should be the same dimensions as the image and in black and white. Black areas (0%) indicate no modification, while white areas (100%) specify areas for inpainting. Optional if you provide an alpha mask in the original image. Validation: The endpoint verifies that the dimensions of the mask match the original image.
             */
            mask?: string | null;
            /**
             * Prompt
             * @description The description of the changes you want to make. This text guides the inpainting process, allowing you to specify features, styles, or modifications for the masked area.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             * @example 50
             */
            steps: number;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility
             */
            seed?: number | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 60
             */
            guidance: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FinetuneFluxUltraInput */
        FinetuneFluxUltraInput: {
            /**
             * Finetune Id
             * @description ID of the fine-tuned model you want to use.
             * @example my-finetune
             */
            finetune_id: string;
            /**
             * Finetune Strength
             * @description Strength of the fine-tuned model. 0.0 means no influence, 1.0 means full influence. Allowed values up to 2.0
             * @default 1.2
             */
            finetune_strength: number;
            /**
             * Prompt
             * @description The prompt to use for image generation.
             * @default
             * @example A beautiful landscape with mountains and a lake
             */
            prompt: string | null;
            /**
             * Seed
             * @description Optional seed for reproducibility. If not provided, a random seed will be used.
             * @example 42
             */
            seed?: number | null;
            /**
             * Aspect Ratio
             * @description Aspect ratio of the image between 21:9 and 9:21
             * @default 16:9
             */
            aspect_ratio: string;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Image Prompt
             * @description Optional image to remix in base64 format
             */
            image_prompt?: string | null;
            /**
             * Image Prompt Strength
             * @description Blend between the prompt and the image prompt
             * @default 0.1
             */
            image_prompt_strength: number;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FinetuneInputs */
        FinetuneInputs: {
            /**
             * File Data
             * @description Base64-encoded ZIP file containing training images and, optionally, corresponding captions.
             */
            file_data: string;
            /**
             * Finetune Comment
             * @description Comment or name of the fine-tuned model. This will be added as a field to the finetune_details.
             * @example my-first-finetune
             */
            finetune_comment: string;
            /**
             * Trigger Word
             * @description Trigger word for the fine-tuned model.
             * @default TOK
             * @example TOK
             */
            trigger_word: string;
            /**
             * Mode
             * @description Mode for the fine-tuned model. Allowed values are 'general', 'character', 'style', 'product'. This will affect the caption behaviour. General will describe the image in full detail.
             * @enum {string}
             */
            mode: "general" | "character" | "style" | "product";
            /**
             * Iterations
             * @description Number of iterations for fine-tuning.
             * @default 300
             */
            iterations: number;
            /**
             * Learning Rate
             * @description Learning rate for fine-tuning. If not provided, defaults to 1e-5 for full fine-tuning and 1e-4 for lora fine-tuning.
             */
            learning_rate?: number | null;
            /**
             * Captioning
             * @description Whether to enable captioning during fine-tuning.
             * @default true
             */
            captioning: boolean;
            /**
             * Priority
             * @description Priority of the fine-tuning process. 'speed' will prioritize iteration speed over quality, 'quality' will prioritize quality over speed.
             * @default quality
             * @enum {string}
             */
            priority: "speed" | "quality" | "high_res_only";
            /**
             * Finetune Type
             * @description Type of fine-tuning. 'lora' is a standard LoRA Adapter, 'full' is a full fine-tuning mode, with a post hoc lora extraction.
             * @default full
             * @enum {string}
             */
            finetune_type: "lora" | "full";
            /**
             * Lora Rank
             * @description Rank of the fine-tuned model. 16 or 32. If finetune_type is 'full', this will be the rank of the extracted lora model.
             * @default 32
             * @enum {integer}
             */
            lora_rank: 16 | 32;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxDevInputs */
        FluxDevInputs: {
            /**
             * Prompt
             * @description Text prompt for image generation.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Image Prompt
             * @description Optional base64 encoded image to use as a prompt for generation.
             */
            image_prompt?: string | null;
            /**
             * Width
             * @description Width of the generated image in pixels. Must be a multiple of 32.
             * @default 1024
             */
            width: number;
            /**
             * Height
             * @description Height of the generated image in pixels. Must be a multiple of 32.
             * @default 768
             */
            height: number;
            /**
             * Steps
             * @description Number of steps for the image generation process.
             * @default 28
             * @example 28
             */
            steps: number | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility.
             * @example 42
             */
            seed?: number | null;
            /**
             * Guidance
             * @description Guidance scale for image generation. High guidance scales improve prompt adherence at the cost of reduced realism.
             * @default 3
             * @example 3
             */
            guidance: number | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxKontextProInputs */
        FluxKontextProInputs: {
            /**
             * Prompt
             * @description Text prompt for image generation.
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Input Image
             * @description Base64 encoded image to use with Bagel.
             */
            input_image?: string | null;
            /**
             * Seed
             * @description Optional seed for reproducibility.
             * @example 42
             */
            seed?: number | null;
            /**
             * Aspect Ratio
             * @description Aspect ratio of the image between 21:9 and 9:21
             */
            aspect_ratio?: string | null;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default png
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
        };
        /** FluxPro11Inputs */
        FluxPro11Inputs: {
            /**
             * Prompt
             * @description Text prompt for image generation.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string | null;
            /**
             * Image Prompt
             * @description Optional base64 encoded image to use with Flux Redux.
             */
            image_prompt?: string | null;
            /**
             * Width
             * @description Width of the generated image in pixels. Must be a multiple of 32.
             * @default 1024
             */
            width: number;
            /**
             * Height
             * @description Height of the generated image in pixels. Must be a multiple of 32.
             * @default 768
             */
            height: number;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility.
             * @example 42
             */
            seed?: number | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxProExpandInputs */
        FluxProExpandInputs: {
            /**
             * Image
             * @description A Base64-encoded string representing the image you wish to expand.
             */
            image: string;
            /**
             * Top
             * @description Number of pixels to expand at the top of the image
             * @default 0
             */
            top: number | null;
            /**
             * Bottom
             * @description Number of pixels to expand at the bottom of the image
             * @default 0
             */
            bottom: number | null;
            /**
             * Left
             * @description Number of pixels to expand on the left side of the image
             * @default 0
             */
            left: number | null;
            /**
             * Right
             * @description Number of pixels to expand on the right side of the image
             * @default 0
             */
            right: number | null;
            /**
             * Prompt
             * @description The description of the changes you want to make. This text guides the expansion process, allowing you to specify features, styles, or modifications for the expanded areas.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string | null;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             * @example 50
             */
            steps: number | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation
             * @default false
             */
            prompt_upsampling: boolean | null;
            /**
             * Seed
             * @description Optional seed for reproducibility
             */
            seed?: number | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 60
             */
            guidance: number | null;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxProFillInputs */
        FluxProFillInputs: {
            /**
             * Image
             * @description A Base64-encoded string representing the image you wish to modify. Can contain alpha mask if desired.
             */
            image: string;
            /**
             * Mask
             * @description A Base64-encoded string representing a mask for the areas you want to modify in the image. The mask should be the same dimensions as the image and in black and white. Black areas (0%) indicate no modification, while white areas (100%) specify areas for inpainting. Optional if you provide an alpha mask in the original image. Validation: The endpoint verifies that the dimensions of the mask match the original image.
             */
            mask?: string | null;
            /**
             * Prompt
             * @description The description of the changes you want to make. This text guides the inpainting process, allowing you to specify features, styles, or modifications for the masked area.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string | null;
            /**
             * Steps
             * @description Number of steps for the image generation process
             * @default 50
             * @example 50
             */
            steps: number | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation
             * @default false
             */
            prompt_upsampling: boolean | null;
            /**
             * Seed
             * @description Optional seed for reproducibility
             */
            seed?: number | null;
            /**
             * Guidance
             * @description Guidance strength for the image generation process
             * @default 60
             */
            guidance: number | null;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxProFinetuneInputs */
        FluxProFinetuneInputs: {
            /**
             * Finetune Id
             * @description ID of the fine-tuned model you want to use.
             * @example my-finetune
             */
            finetune_id: string;
            /**
             * Finetune Strength
             * @description Strength of the fine-tuned model. 0.0 means no influence, 1.0 means full influence. Allowed values up to 2.0
             * @default 1.1
             */
            finetune_strength: number;
            /**
             * Steps
             * @description Number of steps for the fine-tuning process.
             * @default 40
             * @example 40
             */
            steps: number;
            /**
             * Guidance
             * @description Guidance scale for image generation. High guidance scales improve prompt adherence at the cost of reduced realism.
             * @default 2.5
             * @example 2.5
             */
            guidance: number;
            /**
             * Prompt
             * @description Text prompt for image generation.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string;
            /**
             * Image Prompt
             * @description Optional base64 encoded image to use with Flux Redux.
             */
            image_prompt?: string | null;
            /**
             * Width
             * @description Width of the generated image in pixels. Must be a multiple of 32.
             * @default 1024
             */
            width: number;
            /**
             * Height
             * @description Height of the generated image in pixels. Must be a multiple of 32.
             * @default 768
             */
            height: number;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility.
             * @example 42
             */
            seed?: number;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"];
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxProInputs */
        FluxProInputs: {
            /**
             * Prompt
             * @description Text prompt for image generation.
             * @default
             * @example ein fantastisches bild
             */
            prompt: string | null;
            /**
             * Image Prompt
             * @description Optional base64 encoded image to use as a prompt for generation.
             */
            image_prompt?: string | null;
            /**
             * Width
             * @description Width of the generated image in pixels. Must be a multiple of 32.
             * @default 1024
             */
            width: number;
            /**
             * Height
             * @description Height of the generated image in pixels. Must be a multiple of 32.
             * @default 768
             */
            height: number;
            /**
             * Steps
             * @description Number of steps for the image generation process.
             * @default 40
             * @example 40
             */
            steps: number | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility.
             * @example 42
             */
            seed?: number | null;
            /**
             * Guidance
             * @description Guidance scale for image generation. High guidance scales improve prompt adherence at the cost of reduced realism.
             * @default 2.5
             * @example 2.5
             */
            guidance: number | null;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * Interval
             * @description Interval parameter for guidance control.
             * @default 2
             * @example 2
             */
            interval: number | null;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** FluxUltraInput */
        FluxUltraInput: {
            /**
             * Prompt
             * @description The prompt to use for image generation.
             * @default
             * @example A beautiful landscape with mountains and a lake
             */
            prompt: string | null;
            /**
             * Prompt Upsampling
             * @description Whether to perform upsampling on the prompt. If active, automatically modifies the prompt for more creative generation.
             * @default false
             */
            prompt_upsampling: boolean;
            /**
             * Seed
             * @description Optional seed for reproducibility. If not provided, a random seed will be used.
             * @example 42
             */
            seed?: number | null;
            /**
             * Aspect Ratio
             * @description Aspect ratio of the image between 21:9 and 9:21
             * @default 16:9
             */
            aspect_ratio: string;
            /**
             * Safety Tolerance
             * @description Tolerance level for input and output moderation. Between 0 and 6, 0 being most strict, 6 being least strict.
             * @default 2
             * @example 2
             */
            safety_tolerance: number;
            /**
             * @description Output format for the generated image. Can be 'jpeg' or 'png'.
             * @default jpeg
             */
            output_format: components["schemas"]["OutputFormat"] | null;
            /**
             * Raw
             * @description Generate less processed, more natural-looking images
             * @default false
             * @example false
             */
            raw: boolean;
            /**
             * Image Prompt
             * @description Optional image to remix in base64 format
             */
            image_prompt?: string | null;
            /**
             * Image Prompt Strength
             * @description Blend between the prompt and the image prompt
             * @default 0.1
             */
            image_prompt_strength: number;
            /**
             * Webhook Url
             * @description URL to receive webhook notifications
             */
            webhook_url?: string | null;
            /**
             * Webhook Secret
             * @description Optional secret for webhook signature verification
             */
            webhook_secret?: string | null;
        };
        /** HTTPValidationError */
        HTTPValidationError: {
            /** Detail */
            detail?: components["schemas"]["ValidationError"][];
        };
        /** MyFinetunesResponse */
        MyFinetunesResponse: {
            /**
             * Finetunes
             * @description List of finetunes created by the user
             */
            finetunes: unknown[];
        };
        /**
         * OutputFormat
         * @enum {string}
         */
        OutputFormat: "jpeg" | "png";
        /** ResultResponse */
        ResultResponse: {
            /**
             * Id
             * @description Task id for retrieving result
             */
            id: string;
            status: components["schemas"]["StatusResponse"];
            /** Result */
            result?: unknown | null;
            /** Progress */
            progress?: number | null;
            /** Details */
            details?: {
                [key: string]: unknown;
            } | null;
        };
        /**
         * StatusResponse
         * @enum {string}
         */
        StatusResponse: "Task not found" | "Pending" | "Request Moderated" | "Content Moderated" | "Ready" | "Error";
        /** ValidationError */
        ValidationError: {
            /** Location */
            loc: (string | number)[];
            /** Message */
            msg: string;
            /** Error Type */
            type: string;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_result_v1_get_result_get: {
        parameters: {
            query: {
                id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["ResultResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_pro_1_1_v1_flux_pro_1_1_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxPro11Inputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_pro_v1_flux_pro_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxProInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_dev_v1_flux_dev_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxDevInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_bigblue_v1_flux_pro_1_1_ultra_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxUltraInput"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    fill_v1_flux_pro_1_0_fill_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxProFillInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    expand_v1_flux_pro_1_0_expand_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxProExpandInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pro_canny_v1_flux_pro_1_0_canny_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["CannyInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    pro_depth_v1_flux_pro_1_0_depth_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DepthInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    finetune_details_v1_finetune_details_get: {
        parameters: {
            query: {
                finetune_id: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["FinetuneDetailResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    finetune_v1_finetune_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FinetuneInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": unknown;
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_pro_finetuned_v1_flux_pro_finetuned_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxProFinetuneInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_pro_1_0_depth_finetuned_v1_flux_pro_1_0_depth_finetuned_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FinetuneDepthInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_pro_1_0_canny_finetuned_v1_flux_pro_1_0_canny_finetuned_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FinetuneCannyInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    flux_pro_1_0_fill_finetuned_v1_flux_pro_1_0_fill_finetuned_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FinetuneFluxProFillInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    my_finetunes_v1_my_finetunes_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["MyFinetunesResponse"];
                };
            };
        };
    };
    delete_finetune_v1_delete_finetune_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["DeleteFinetuneInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["DeleteFinetuneResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_bigblue_finetuned_v1_flux_pro_1_1_ultra_finetuned_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FinetuneFluxUltraInput"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_flux_kontext_pro_v1_flux_kontext_pro_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxKontextProInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
    generate_flux_kontext_max_v1_flux_kontext_max_post: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["FluxKontextProInputs"];
            };
        };
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["AsyncResponse"] | components["schemas"]["AsyncWebhookResponse"];
                };
            };
            /** @description Validation Error */
            422: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["HTTPValidationError"];
                };
            };
        };
    };
}
